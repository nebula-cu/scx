on:
  workflow_call:
    inputs:
      git-repo:
        required: true
        type: string
      branch:
        required: true
        type: string

jobs:
  build-kernel:
    runs-on: ${{ github.repository_owner == 'sched-ext' && fromJSON('[ "self-hosted", "linux", "x64" ]') || 'ubuntu-latest' }}
    steps:
      - name: Install Nix
        if: ${{ runner.environment == 'github-hosted' }}
        uses: DeterminateSystems/nix-installer-action@main

      # Make very basic dependencies available in PATH
      - name: Install basic dependencies
        run: |
          nix profile install nixpkgs#{git,openssl,gawk,gnutar,zstd}
          echo "$HOME/.nix-profile/bin" >> $GITHUB_PATH

      # get latest head commit of sched_ext for-next
      - run: echo "SCHED_EXT_KERNEL_COMMIT=$(git ls-remote ${{ inputs.git-repo }} heads/${{ inputs.branch }} | awk '{print $1}')" >> $GITHUB_ENV

      # check for cached kernel without downloading
      - name: Cache Kernel
        id: cache-kernel
        uses: actions/cache@v4
        with:
          path: |
            linux/arch/x86/boot/bzImage
            linux/usr/include
            linux/**/*.h
          key: kernel-build-${{ env.SCHED_EXT_KERNEL_COMMIT }}-7
          lookup-only: true

      - if: ${{ steps.cache-kernel.outputs.cache-hit != 'true' }}
        uses: actions/checkout@v4

      - if: ${{ steps.cache-kernel.outputs.cache-hit != 'true' }}
        uses: nicknovitski/nix-develop@v1
        with:
          arguments: ./.github/workflows#build-kernel

      - if: ${{ steps.cache-kernel.outputs.cache-hit != 'true' }}
        name: Clone Kernel
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          retries: 10
          pause: 18
          command: git clone --single-branch -b ${{ inputs.branch }} --depth 1 ${{ inputs.git-repo }} linux

      - if: ${{ steps.cache-kernel.outputs.cache-hit != 'true' }}
        name: Select correct commit for cache hash
        run: |
          cd linux
          git switch --detach ${{ env.SCHED_EXT_KERNEL_COMMIT }}
          git log -1 --pretty=format:"%h %ad %s" --date=short

      - if: ${{ steps.cache-kernel.outputs.cache-hit != 'true' }}
      # Build a minimal kernel (with sched-ext enabled) using virtme-ng
        run: cd linux && virtme-ng -v --build --config ../.github/workflows/sched-ext.config

      - if: ${{ steps.cache-kernel.outputs.cache-hit != 'true' }}
      # Generate kernel headers
        run: cd linux && make headers
